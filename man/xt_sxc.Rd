% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xt_sxc.R
\name{xt_sxc}
\alias{xt_sxc}
\title{Create channel cross sections object}
\usage{
xt_sxc(x, ...)
}
\arguments{
\item{x}{Object to create cross sections out of. Can be a vector of
(positive) widths if the spatial orientation is not important;
can be line segments created using the sf package.}

\item{...}{Optional arguments passed to \code{sf::st_sfc()} relating to the
geometrical properties of the cross sections, such as \code{crs}.}
}
\value{
A channel cross section object, with class "sxc", which is a
subclass of sf's "sfc_LINESTRING" class.
The nomenclature is inspired by the sf package, so that
"sxc" stands for "spatial cross-section column".
}
\description{
Channel cross sections are a lightweight wrapper on sf geometries
(\code{sfc} objects), specifically a collection of line segments. This means
that you can use functions from sf to manipulate these objects whenever
special cross section methods do not exist.
}
\examples{
# Create cross sections without worrying about spatial orientation.
a <- xt_sxc(1:3)

# Create cross sections from sf line segments, this time with a
# coordinate reference system. Note that even though we input a
# multilinestring, sxchan parses it into linestrings, so that each
# cross section is a linestring.
library(sf)
seg <- st_multilinestring(list(
  matrix(c(0, 1, 0, 1), ncol = 2),
  matrix(c(0, 1.5, -0.5, 0), ncol = 2)
))
b <- xt_sxc(seg, crs = 3005)
plot(b)

# Because these objects are just sxc objects from the sf package,
# we can manipulate them with sf.
# - Subset to grab individual cross section line segments:
b[[1]]
b[[2]]

# - Add arbitrary features to the cross sections.
(b2 <- st_sf(b, roughness = 0.1, swimmability = c(4, 2)))

# - Want to add / change more columns / features? It's just a data frame:
b2$rockiness <- c(1, 1.1)
b2
plot(b2)

# - The geometry column is still a cross section object
st_geometry(b2)
}
